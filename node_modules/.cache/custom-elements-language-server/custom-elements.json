{"schemaVersion":"1.0.0","readme":"","modules":[{"kind":"javascript-module","path":"workbox-config.js","declarations":[],"exports":[]},{"kind":"javascript-module","path":"public/sw.js","declarations":[],"exports":[]},{"kind":"javascript-module","path":"public/workbox-cffbb336.js","declarations":[],"exports":[]},{"kind":"javascript-module","path":"public/script/ezdice.js","declarations":[{"kind":"class","description":"","name":"EZDice","members":[{"kind":"method","name":"roll","parameters":[{"name":"diceStr","description":"The string containing the dice rolls.","type":{"text":"string"}}],"description":"Parse **diceStr** as dice notation, then roll those dice.\n\nThe parser is very forgiving, ignoring whitespace and anything else it doesn't recognize.\nIt is also case-insensitive. Dice notation is documented in README.md","return":{"type":{"text":"number|false"}}},{"kind":"method","name":"strContainsDice","parameters":[{"name":"diceStr","description":"The string which may contain dice rolls.","type":{"text":"string"}}],"description":"Parse **diceStr** and determine if it contains at least one dice roll.","return":{"type":{"text":"boolean"}}},{"kind":"method","name":"addState","parameters":[{"name":"sides"},{"name":"value"},{"name":"dropped","default":"false"}]},{"kind":"method","name":"processGroup","parameters":[{"name":"group"}]},{"kind":"method","name":"getRandomNumber","parameters":[{"name":"max","description":"The highest number on the dice. Roll is 1 - max (inclusive).","type":{"text":"number"}}],"description":"Generates the pseudo-random number for dice rolls.","return":{"type":{"text":"number"}}},{"kind":"method","name":"getTotal","description":"Get the total of the last roll.","return":{"type":{"text":"number"}}},{"kind":"method","name":"getDiceStates","description":"Get the state of the dice after the last roll.","return":{"type":{"text":"Array"}}},{"kind":"method","name":"getModifier","description":"Get the combined modifiers of the last roll.","return":{"type":{"text":"string"}}},{"kind":"field","name":"re","default":"/(?<operator>[\\+-])?\\s*(?<number>\\d+)(?:[dD](?<sides>(?:\\d+|%))(?:-(?<drop>[LlHh])(?<dquantity>\\d+)?)?)?/g"},{"kind":"field","name":"total","type":{"text":"number"},"default":"0"},{"kind":"field","name":"states","type":{"text":"array"},"default":"[]"},{"kind":"field","name":"modifier","type":{"text":"number"},"default":"0"}]}],"exports":[{"kind":"js","name":"EZDice","declaration":{"name":"EZDice","module":"public/script/ezdice.js"}}]},{"kind":"javascript-module","path":"public/script/index.mjs","declarations":[],"exports":[]},{"kind":"javascript-module","path":"vendor/phpunit/php-code-coverage/src/Report/Html/Renderer/Template/js/bootstrap.min.js","declarations":[],"exports":[]},{"kind":"javascript-module","path":"vendor/phpunit/php-code-coverage/src/Report/Html/Renderer/Template/js/d3.min.js","declarations":[],"exports":[]},{"kind":"javascript-module","path":"vendor/phpunit/php-code-coverage/src/Report/Html/Renderer/Template/js/file.js","declarations":[],"exports":[]},{"kind":"javascript-module","path":"vendor/phpunit/php-code-coverage/src/Report/Html/Renderer/Template/js/jquery.min.js","declarations":[],"exports":[]},{"kind":"javascript-module","path":"vendor/phpunit/php-code-coverage/src/Report/Html/Renderer/Template/js/nv.d3.min.js","declarations":[],"exports":[]},{"kind":"javascript-module","path":"vendor/phpunit/php-code-coverage/src/Report/Html/Renderer/Template/js/popper.min.js","declarations":[],"exports":[]}]}